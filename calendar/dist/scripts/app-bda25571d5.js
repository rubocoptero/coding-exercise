!function(){"use strict";angular.module("week",["date"])}(),function(){"use strict";function t(t){function e(e){this.date=e||t.now(),this.days=n(this.date)}function n(t){for(var e=t.clone().startOf("week"),n=[],i=0,r=a;r>i;i++)n.push(e.clone().add(i,"days"));return n}var a=7;return e.prototype.startsOn=function(){return this.days[0].clone()},e.prototype.endsOn=function(){return this.days[a-1].clone()},e.prototype.getDays=function(){return this.days},e.prototype.contains=function(t){return this.date.isSame(t,"week")},e.prototype.next=function(){return new e(this.date.add(1,"week"))},e.prototype.previous=function(){return new e(this.date.subtract(1,"week"))},e}angular.module("week").factory("Week",t),t.$inject=["DateService"]}(),function(){"use strict";angular.module("date",[])}(),function(){"use strict";function t(t){var e={};return e.now=function(){return t()},e.parse=function(e){return t(e)},e.isAPastDay=function(t){return e.now().isAfter(t,"day")},e}angular.module("date").factory("DateService",t),t.$inject=["moment"]}(),function(){"use strict";angular.module("date").constant("moment",moment)}(),function(){"use strict";angular.module("availability",["date"])}(),function(){"use strict";function t(t){t.loadUnavailableDates(["2015-06-01","2015-06-08","2015-06-15","2015-06-16","2015-06-17","2015-07-03","2015-07-04","2015-07-05","2015-07-12","2015-07-29","2015-09-11","2015-09-13"])}angular.module("availability").run(t),t.$inject=["AvailabilityRepository"]}(),function(){"use strict";function t(t){var e={},n=[];return e.loadUnavailableDates=function(e){n=e.map(t.parse)},e.isAvailableOn=function(t){function e(e){return e.isSame(t,"day")}return!n.some(e)},e}angular.module("availability").factory("AvailabilityRepository",t),t.$inject=["DateService"]}(),function(){"use strict";angular.module("calendar",["week","availability","ngAnimate","ngCookies","ngTouch","ngSanitize","ui.router"])}(),function(){"use strict";function t(t,e,n){var a=this;a.week=new t,a.isFirstPage=function(){return a.week.contains(e.now())},a.isLastPage=function(){var t=e.now().add(3,"months");return a.week.contains(t)},a.nextWeek=function(){a.week=a.week.next()},a.previousWeek=function(){a.week=a.week.previous()},a.isAvailableOn=n.isAvailableOn,a.isAPastDay=e.isAPastDay}angular.module("calendar").controller("MainController",t),t.$inject=["Week","DateService","AvailabilityRepository"]}(),function(){"use strict";function t(t,e){t.state("home",{url:"/",templateUrl:"app/main/main.html",controller:"MainController",controllerAs:"main"}),e.otherwise("/")}angular.module("calendar").config(t),t.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function t(t){t.debugEnabled(!0)}angular.module("calendar").config(t),t.$inject=["$logProvider"]}(),angular.module("calendar").run(["$templateCache",function(t){t.put("app/main/main.html",'<div class="margin"><table class="week-calendar"><thead><tr><th colspan="7" class="week-pagination"><button type="button" class="btn btn-primary" id="previousWeekBtn" ng-disabled="main.isFirstPage()" ng-click="main.previousWeek()"><span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span></button><h5 class="current-week">{{ main.week.startsOn().toISOString() | date: \'MMM d, yyyy\' }} - {{ main.week.endsOn().toISOString() | date: \'MMM d, yyyy\' }}</h5><button type="button" class="btn btn-primary" id="nextWeekBtn" ng-disabled="main.isLastPage()" ng-click="main.nextWeek()"><span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span></button></th></tr></thead><tbody><tr><td class="day-of-the-week" ng-repeat="day in main.week.getDays() track by day.valueOf()" ng-class="{ \'past-day\': main.isAPastDay(day), \'day-available\': main.isAvailableOn(day) && !main.isAPastDay(day), \'day-unavailable\': !main.isAvailableOn(day) && !main.isAPastDay(day)}">{{ day.toISOString() | date: \'EEE M/d\' }}</td></tr></tbody></table></div>')}]);